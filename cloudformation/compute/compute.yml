AWSTemplateFormatVersion: "2010-09-09"
Description: Compute resources - Bastion, ALB, ASG

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name (e.g. dev, prod)
  VpcId:
    Type: String
  PublicSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  PrivateSubnet1:
    Type: String
  PrivateSubnet2:
    Type: String
  BastionSecurityGroup:
    Type: String
  ALBSecurityGroup:
    Type: String
  AppSecurityGroup:
    Type: String
  KeyName:
    Type: String
    Default: my-key

Resources:
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-08c40ec9ead489470 # Ubuntu 22.04 us-east-1
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds: [!Ref BastionSecurityGroup]
      KeyName: !Ref KeyName

  AppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-08c40ec9ead489470
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref AppSecurityGroup
        KeyName: !Ref KeyName
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            apt-get install -y apache2
            echo "Hello from AutoScaling instance" > /var/www/html/index.html
            systemctl start apache2

  AppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckPath: /

  AppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: AppTargetGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      LaunchTemplate:
        LaunchTemplateId: !Ref AppLaunchTemplate
        Version: !GetAtt AppLaunchTemplate.LatestVersionNumber
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2
      TargetGroupARNs: [!Ref AppTargetGroup]

  AppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups: [!Ref ALBSecurityGroup]

  AppListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref AppLB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AppTargetGroup

Outputs:
  BastionHost:
    Value: !Ref BastionHost
  ApplicationLoadBalancer:
    Value: !GetAtt AppLB.DNSName
